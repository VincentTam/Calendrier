//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Calendrier.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PachaDataFormationEntities : DbContext
    {
        public PachaDataFormationEntities()
            : base("name=PachaDataFormationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Session> SessionSet { get; set; }
    
        public virtual int DeleteSession(Nullable<int> sessionId)
        {
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSession", sessionIdParameter);
        }
    
        public virtual ObjectResult<Session> GetSessions(Nullable<int> annee, Nullable<byte> semaine)
        {
            var anneeParameter = annee.HasValue ?
                new ObjectParameter("Annee", annee) :
                new ObjectParameter("Annee", typeof(int));
    
            var semaineParameter = semaine.HasValue ?
                new ObjectParameter("Semaine", semaine) :
                new ObjectParameter("Semaine", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Session>("GetSessions", anneeParameter, semaineParameter);
        }
    
        public virtual ObjectResult<Session> GetSessions(Nullable<int> annee, Nullable<byte> semaine, MergeOption mergeOption)
        {
            var anneeParameter = annee.HasValue ?
                new ObjectParameter("Annee", annee) :
                new ObjectParameter("Annee", typeof(int));
    
            var semaineParameter = semaine.HasValue ?
                new ObjectParameter("Semaine", semaine) :
                new ObjectParameter("Semaine", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Session>("GetSessions", mergeOption, anneeParameter, semaineParameter);
        }
    }
}
